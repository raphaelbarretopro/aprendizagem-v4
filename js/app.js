/**
 * app.js - Arquivo principal de inicializa√ß√£o da aplica√ß√£o
 * Inicializa o Model e Controller e conecta todos os componentes
 */

// Aguardar carregamento completo do DOM
document.addEventListener('DOMContentLoaded', () => {
    console.log('üöÄ Inicializando Sistema de Processamento de Frequ√™ncia...');

    // Verificar se as bibliotecas necess√°rias est√£o carregadas
    if (typeof Papa === 'undefined') {
        console.error('‚ùå PapaParse n√£o est√° carregado!');
        alert('Erro: Biblioteca PapaParse n√£o foi carregada. Verifique sua conex√£o com a internet.');
        return;
    }

    if (typeof flatpickr === 'undefined') {
        console.error('‚ùå Flatpickr n√£o est√° carregado!');
        alert('Erro: Biblioteca Flatpickr n√£o foi carregada. Verifique sua conex√£o com a internet.');
        return;
    }

    if (typeof XLSX === 'undefined') {
        console.error('‚ùå SheetJS (XLSX) n√£o est√° carregado!');
        alert('Erro: Biblioteca SheetJS n√£o foi carregada. Verifique sua conex√£o com a internet.');
        return;
    }

    // Verificar se as classes Model e Controller est√£o dispon√≠veis
    if (typeof DataModel === 'undefined') {
        console.error('‚ùå DataModel n√£o est√° definido!');
        alert('Erro: Arquivo DataModel.js n√£o foi carregado corretamente.');
        return;
    }

    if (typeof FrequencyController === 'undefined') {
        console.error('‚ùå FrequencyController n√£o est√° definido!');
        alert('Erro: Arquivo FrequencyController.js n√£o foi carregado corretamente.');
        return;
    }

    try {
        // Instanciar o Model
        const dataModel = new DataModel();
        console.log('‚úì DataModel inicializado');

        // Instanciar o Controller passando o Model
        const controller = new FrequencyController(dataModel);
        console.log('‚úì FrequencyController inicializado');

        // Disponibilizar globalmente para debugging (apenas em desenvolvimento)
        if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
            window.app = {
                model: dataModel,
                controller: controller
            };
            console.log('‚ÑπÔ∏è App dispon√≠vel globalmente via window.app (modo desenvolvimento)');
        }

        console.log('‚úÖ Sistema inicializado com sucesso!');
        console.log('üìù Aguardando upload de arquivo CSV...');

    } catch (error) {
        console.error('‚ùå Erro ao inicializar aplica√ß√£o:', error);
        alert('Erro ao inicializar o sistema: ' + error.message);
    }
});

// Tratamento de erros globais
window.addEventListener('error', (event) => {
    console.error('‚ùå Erro n√£o tratado:', event.error);
});

window.addEventListener('unhandledrejection', (event) => {
    console.error('‚ùå Promise rejeitada n√£o tratada:', event.reason);
});

// Adicionar informa√ß√µes √∫teis ao console
console.log('%cSistema de Processamento de Frequ√™ncia', 'color: #2563eb; font-size: 20px; font-weight: bold;');
console.log('%cProjeto Jovem Aprendiz', 'color: #64748b; font-size: 14px;');
console.log('%c¬© 2025 - Desenvolvido com JavaScript, HTML e CSS', 'color: #64748b; font-size: 12px;');
